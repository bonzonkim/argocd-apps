deploymentMode: Distributed
global:
  dnsService: "kube-dns"
loki:
  schemaConfig:
    configs:
      - from: "2024-01-16"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  auth_enabled: false
  commonConfig:
    replication_factor: 3
  limits_config:
    max_cache_freshness_per_query: 10m
    ingestion_rate_mb: 1024
    ingestion_burst_size_mb: 1024
    retention_period: 120h
    max_query_series: 100000
    max_line_size: 3145728
  ingester:
    chunk_encoding: snappy
  storage:
    bucketNames:
      chunks: chunks
      ruler: ruler-chunks
      admin: admin-chunks
    type: s3
    s3:
      s3: "http://test:test@loki-minio.lgtm.svc.cluster.local:9000/chunks"
      endpoint: loki-minio.lgtm.svc.cluster.local:9000
      secretAccessKey: test
      bucketnames: chunks
      accessKeyId: test
      s3ForcePathStyle: true
      insecure: true
      signatureVersion: v4
  storage_config:
    tsdb_shipper:
      active_index_directory: /var/loki/tsdb-index
      cache_location: /var/loki/tsdb-cache
    aws:
      s3: "http://test:test@loki-minio.lgtm.svc.cluster:9000/chunks"
      bucketnames: chunks
      endpoint: loki-minio.lgtm.svc.cluster.local:9000
      s3forcepathstyle: true
  # addition Ruler configs see https://grafana.com/docs/loki/latest/configure/#ruler
  rulerConfig:
    storage:
      type: local
      local:
        directory: /etc/loki/rules
    rule_path: /rules
    enable_api: true
    enable_alertmanager_v2: true
    alertmanager_url: "http://kube-prometheus-stack-alertmanager.prometheus.svc.cluster.local:9093"
    external_url: "https://alertmanager.k8s.sos-standard.com"

chunksCache:
  enabled: false

distributor:
  replicas: 1
  maxUnavailable: 1
  ring:
    kvstore:
      store: memberlist
ingester:
  replicas: 0
querier:
  replicas: 1
  maxUnavailable: 1
queryFrontend:
  replicas: 1
  maxUnavailable: 1
queryScheduler:
  replicas: 1
  maxUnavailable: 1
compactor:
  replicas: 1
  maxUnavailable: 1
  retention_enabled: true
  retention_delete_delay: 168h
  delete_request_store: s3
  ring:
    kvstore:
      store: memberlist
indexGateway:
  replicas: 1
  maxUnavailable: 1
  persistence:
    enabled: false
<<<<<<< HEAD
=======
    size: 10Gi
>>>>>>> 72da19a (fix: disabled index gateway persistence volume)
ruler:
  replicas: 1
  maxUnavailable: 1
  ring:
    kvstore:
      store: memberlist
  extraVolumes:
    #  - name: loki-rules
    #    configMap:
    #      name: loki-alerting-rules
    - name: loki-rules-generated
      emptyDir: {}
  extraVolumeMounts:
    - name: loki-rules-generated
      mountPath: /rules
    #- name: loki-rules
    #  mountPath: /etc/loki/rules/
  directories:
    fake:
      rules1.txt: |
        groups:
          - name: test_alert
            rules:
              - alert: AlertManagerHealthCheck
                expr: 1 + 1
                for: 1m
                labels:
                    severity: critical
                annotations:
                    summary: Not an alert! Just for checking AlertManager Pipeline
              - alert: TestAlert
                expr: sum(rate({app="loki"} | logfmt | level="info"[1m])) by (container) > 0
                for: 1m
                labels:
                    severity: warning
                annotations:
                    summary: Loki info warning per minute rate > 0
                    message: 'Loki warning per minute rate > 0 container:"{{`{{`}} $labels.container {{`}}`}}"'

memberlist:
  join_members:
    - "loki-memberlist:7946"

minio:
  enabled: true
  replicas: 1
  drivesPerNode: 2
  rootUser: "test"
  rootPassword: "test"
  buckets:
    - name: chunks
      policy: none
      purge: false
    - name: ruler-chunks
      policy: none
      purge: false
    - name: admin-chunks
      policy: none
      purge: false
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  persistence:
    enabled: false

###### Disabled components ######
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0
